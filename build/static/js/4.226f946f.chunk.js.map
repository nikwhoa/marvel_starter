{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","comic","title","description","pageCount","thumbnail","textObjects","prices","console","log","className","src","path","alt","language","price","to","SingleComicPage","comicID","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","id","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"oMA+CMA,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACJC,EAAkED,EAAlEC,MAAOC,EAA2DF,EAA3DE,YAAaC,EAA8CH,EAA9CG,UAAWC,EAAmCJ,EAAnCI,UAAWC,EAAwBL,EAAxBK,YAAaC,EAAWN,EAAXM,OAE/D,OADAC,QAAQC,IAAIR,GAER,sBAAKS,UAAU,eAAf,UACI,qBAAKC,IAAG,UAAKN,EAAUO,KAAf,QAA2BC,IAAKX,EAAOQ,UAAU,sBACzD,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCR,IACpC,mBAAGQ,UAAU,sBAAb,SAAoCP,IACpC,oBAAGO,UAAU,sBAAb,UAAoCN,EAApC,YACA,oBAAGM,UAAU,sBAAb,iCAAiDJ,EAAYQ,UAAY,YACzE,sBAAKJ,UAAU,sBAAf,UAAsCH,EAAO,GAAGQ,MAAhD,UAEJ,cAAC,IAAD,CAAMC,GAAG,UAAUN,UAAU,qBAA7B,6BAKGO,UAvDS,WAEpB,IAAQC,EAAYC,cAAZD,QAER,EAA0BE,mBAAS,MAAnC,mBAAOnB,EAAP,KAAcoB,EAAd,KAEA,EAAiDC,cAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,WAGlCC,qBAAU,WACNC,EAAYV,KACb,CAACA,IAIJ,IAAMU,EAAc,SAACC,GACjBH,IACAD,EAASI,GAAIC,KAAKC,IAGhBA,EAAgB,SAAC9B,GACnBoB,EAASpB,IAGP+B,EAAeR,EAAQ,cAAC,IAAD,IAAmB,KAC1CS,EAAUV,EAAU,cAAC,IAAD,IAAc,KAClCW,EAAYX,GAAWC,IAAUvB,EAAkC,KAAzB,cAACD,EAAD,CAAMC,MAAOA,IAE7D,OACI,qCACK+B,EACAC,EACAC","file":"static/js/4.226f946f.chunk.js","sourcesContent":["import { useParams, Link } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n\n    const { comicID } = useParams()\n\n    const [comic, setComic] = useState(null)\n\n    const { loading, error, getComic, clearError } = useMarvelService();\n\n\n    useEffect(() => {\n        updateComic(comicID);\n    }, [comicID])\n\n    \n\n    const updateComic = (id) => {\n        clearError()\n        getComic(id).then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null\n    const spinner = loading ? <Spinner /> : null\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>    \n    )\n}\n\nconst View = ({ comic }) => {\n    const { title, description, pageCount, thumbnail, textObjects, prices } = comic\n    console.log(comic);\n    return (\n        <div className=\"single-comic\">\n            <img src={`${thumbnail.path}.jpg`} alt={title} className=\"single-comic__img\" />\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount} pages</p>\n                <p className=\"single-comic__descr\">Language: {`${textObjects.language || 'en-us'}`}</p>\n                <div className=\"single-comic__price\">{prices[0].price}$</div>\n            </div>\n            <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;"],"sourceRoot":""}