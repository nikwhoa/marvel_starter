{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/spinner/spinner.gif","components/spinner/spinner.js","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/errorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","character","des","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","item","i","Spinner","src","spinner","alt","ErrorMessage","RandomChar","state","char","loading","error","marvelService","onRandomChar","setState","updateChar","onCharLoaded","onError","Math","floor","random","then","catch","this","errorMessage","content","onClick","mjolnir","Component","View","style","objectFit","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","arr","props","updateId","renderItems","disabled","Skeleton","CharInfo","onCharLoading","charId","prevProps","err","info","console","log","skeleton","ErrorBoundary","children","App","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAqBeA,EAnBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGC,KAAK,IAAR,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,mBAAGC,KAAK,IAAR,0BADR,IAGI,6BAAI,mBAAGA,KAAK,IAAR,+B,+BC8BTC,E,iDA3CXC,SAAW,4C,KACXC,QAAU,0C,KACVC,YAAc,I,KACdC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAMF,GADZ,WACNG,EADM,QAGDC,GAHC,sBAIA,IAAIC,MAAJ,0BAA6BL,EAA7B,qBAA6CG,EAAIG,SAJjD,uBAOGH,EAAII,OAPP,mF,2DAUdC,iB,sBAAmB,0CAAAP,EAAA,6DAAOQ,EAAP,+BAAgB,EAAKX,YAArB,SACG,EAAKC,YAAL,UAAoB,EAAKH,SAAzB,qCAA8Da,EAA9D,YAAwE,EAAKZ,UADhF,cACTM,EADS,yBAERA,EAAIO,KAAKC,QAAQC,IAAI,EAAKC,sBAFlB,2C,KAInBC,a,uCAAe,WAAOC,GAAP,eAAAd,EAAA,sEACO,EAAKF,YAAL,UAAoB,EAAKH,SAAzB,sBAA+CmB,EAA/C,YAAqD,EAAKlB,UADjE,cACLM,EADK,yBAEJ,EAAKU,oBAAoBV,EAAIO,KAAKC,QAAQ,KAFtC,2C,2DAKfE,oBAAsB,SAACG,GAEnB,IAAIC,EAAM,GAMV,OAJID,EAAUE,YAAYC,OAAS,MAC/BF,EAAMD,EAAUE,YAAYE,MAAM,EAAG,KAAO,OAGzC,CACHL,GAAIC,EAAUD,GACdM,KAAML,EAAUK,KAChBH,YAAaD,EACbK,UAAWN,EAAUM,UAAUC,KAAO,IAAMP,EAAUM,UAAUE,UAChEC,SAAUT,EAAUU,KAAK,GAAG1B,IAC5B2B,KAAMX,EAAUU,KAAK,GAAG1B,IACxB4B,OAAQZ,EAAUY,OAAOC,MAAMjB,KAAI,SAACkB,EAAMC,GAAP,OAAaA,EAAI,EAAID,EAAKT,KAAO,WCtCjE,MAA0B,oCCA1B,MAA0B,oCCQ1BW,EANC,WACZ,OACI,qBAAKC,IAAKC,EAASC,IAAI,aAAa1C,UAAU,qBCEvC2C,EANM,WACjB,OACI,qBAAK3C,UAAU,gBAAgBwC,IAA8B,aAAcE,IAAI,WCKjFE,E,4MAGFC,MAAQ,CACJC,KAAM,GACNC,SAAS,EACTC,OAAO,G,EAGXC,cAAgB,IAAI/C,E,EAWpBgD,aAAe,WACX,EAAKC,SAAS,CAACJ,SAAS,IACxB,EAAKK,c,EAOTC,aAAe,SAACP,GACZ,EAAKK,SAAS,CAAEL,OAAMC,SAAS,K,EAGnCO,QAAU,WACN,EAAKH,SAAS,CAAEJ,SAAS,EAAOC,OAAO,K,EAI3CI,WAAa,WACT,IAAM9B,EAAKiC,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5D,EAAKR,cACA5B,aAAaC,GACboC,KAAK,EAAKL,cACVM,MAAM,EAAKL,U,uDAhCpB,WACIM,KAAKR,e,gCAKT,c,kCAQA,c,oBAuBA,WAAU,IAAD,OAEL,EAAiCQ,KAAKf,MAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MACjBa,EAAeb,EAAQ,cAAC,EAAD,IAAmB,KAC1CP,EAAUM,EAAU,cAAC,EAAD,IAAc,KAClCe,EAAYf,GAAWC,EAAgC,KAAvB,cAAC,EAAD,CAAMF,KAAMA,IAElD,OACI,sBAAK9C,UAAU,aAAf,UACK6D,EACApB,EACAqB,EACD,sBAAK9D,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQ+D,QAAS,kBAAM,EAAKb,gBAAgBlD,UAAU,sBAAtD,SACI,qBAAKA,UAAU,QAAf,sBAEJ,qBAAKwC,IAAKwB,EAAStB,IAAI,UAAU1C,UAAU,qC,GAvEtCiE,aA+EnBC,EAAO,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KACJlB,EAAiDkB,EAAjDlB,KAAMH,EAA2CqB,EAA3CrB,YAAaI,EAA8BiB,EAA9BjB,UAAWG,EAAmBc,EAAnBd,SAAUE,EAASY,EAATZ,KAEhD,OACI,sBAAKlC,UAAU,oBAAf,UACI,qBACIwC,IAAKX,EACLa,IAAI,mBACJ1C,UAAU,kBACVmE,MAAqB,wEAAdtC,EAAsF,CAACuC,UAAW,WAAa,OAC1H,sBAAKpE,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiC4B,IACjC,mBAAG5B,UAAU,oBAAb,SACqB,KAAhByB,EAAqB,4CAA8CA,IAExE,sBAAKzB,UAAU,mBAAf,UACI,mBAAGC,KAAM+B,EAAUhC,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMiC,EAAMlC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQT4C,I,OCOAyB,G,kNAhHXxB,MAAQ,CACJyB,SAAU,GACVvB,SAAS,EACTC,OAAO,EACPuB,gBAAgB,EAChBvD,OAAQ,IACRwD,WAAW,G,EAKfvB,cAAgB,IAAI/C,E,EAQpBoD,QAAU,WACN,EAAKH,SAAS,CAAEJ,SAAS,EAAOC,OAAO,K,EAG3CyB,UAAY,SAACzD,GACT,EAAK0D,oBACL,EAAKzB,cACAlC,iBAAiBC,GACjB0C,KAAK,EAAKiB,kBACVhB,MAAM,EAAKL,U,EAGpBoB,kBAAoB,WAChB,EAAKvB,SAAS,CACVoB,gBAAgB,K,EAIxBI,iBAAmB,SAACC,GAChB,IAAIC,GAAQ,EAERD,EAAYlD,OAAS,IACrBmD,GAAQ,GAIZ,EAAK1B,UAAS,gBAAGmB,EAAH,EAAGA,SAAUtD,EAAb,EAAaA,OAAb,MAA2B,CACrCsD,SAAS,GAAD,mBAAMA,GAAN,YAAmBM,IAC3B7B,SAAS,EACTwB,gBAAgB,EAChBvD,OAAQA,EAAS,EACjBwD,UAAWK,O,uDArCnB,WACIjB,KAAKa,c,yBAyCT,SAAYK,GAAM,IAAD,OACP1C,EAAQ0C,EAAI3D,KAAI,SAACkB,GAEnB,OACI,qBACIrC,UAAU,aAEV+D,QAAS,kBAAM,EAAKgB,MAAMC,SAAS3C,EAAKf,KAH5C,UAII,qBAAKkB,IAAKH,EAAKR,UAAWa,IAAKL,EAAKT,KAAMuC,MAA0B,wEAAnB9B,EAAKR,UAAsF,CAAEuC,UAAW,WAAc,OACvK,qBAAKpE,UAAU,aAAf,SAA6BqC,EAAKT,SAH7BS,EAAKf,OAStB,OACI,oBAAItB,UAAU,aAAd,SACKoC,M,oBAKb,WAAU,IAAD,OAEL,EAAwEwB,KAAKf,MAArEyB,EAAR,EAAQA,SAAUvB,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAAOuB,EAAlC,EAAkCA,eAAgBvD,EAAlD,EAAkDA,OAAQwD,EAA1D,EAA0DA,UAEpDpC,EAAQwB,KAAKqB,YAAYX,GAEzBT,EAAeb,EAAQ,cAAC,EAAD,IAAmB,KAC1CP,EAAUM,EAAU,cAAC,EAAD,IAAc,KAClCe,EAAYf,GAAWC,EAAiB,KAARZ,EAEtC,OACI,sBAAKpC,UAAU,aAAf,UACI,qBAAIA,UAAU,aAAd,UACK6D,EACApB,EACAqB,KAEL,wBACIoB,SAAUX,EACVR,QAAS,kBAAM,EAAKU,UAAUzD,IAC9BmD,MAAO,CAAC,QAAWK,EAAY,OAAS,SACxCxE,UAAU,mCAJd,SAKI,qBAAKA,UAAU,QAAf,gC,GArGGiE,cCYRkB,G,YAjBE,WACb,OACI,qCACI,mBAAGnF,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCHzBoF,E,4MAEFvC,MAAQ,CACJC,KAAM,KACNC,SAAS,EACTC,OAAO,G,EAGXC,cAAgB,IAAI/C,E,EAcpBmD,aAAe,SAACP,GACZ,EAAKK,SAAS,CAAEL,OAAMC,SAAS,K,EAGnCO,QAAU,WACN,EAAKH,SAAS,CAAEJ,SAAS,EAAOC,OAAO,K,EAG3CqC,cAAgB,WACZ,EAAKlC,SAAS,CAAEJ,SAAS,K,EAG7BK,WAAa,WACT,IAAQkC,EAAW,EAAKP,MAAhBO,OACHA,IAGL,EAAKD,gBACL,EAAKpC,cACA5B,aAAaiE,GACb5B,KAAK,EAAKL,cACVM,MAAM,EAAKL,W,uDAhCpB,WACIM,KAAKR,e,gCAGT,SAAmBmC,GAEX3B,KAAKmB,MAAMO,SAAWC,EAAUD,QAChC1B,KAAKR,e,+BA4Bb,SAAkBoC,EAAKC,GACnBC,QAAQC,IAAIH,EAAKC,GACjB7B,KAAKT,SAAS,CACVH,OAAO,M,oBAIf,WAEI,MAAiCY,KAAKf,MAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAEjB4C,EAAW9C,GAAQC,GAAWC,EAAQ,KAAO,cAAC,EAAD,IAC7Ca,EAAeb,EAAQ,cAAC,EAAD,IAAmB,KAC1CP,EAAUM,EAAU,cAAC,EAAD,IAAc,KAClCe,EAAYf,GAAWC,IAAUF,EAA+B,KAAvB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAK9C,UAAU,aAAf,UACK4F,EACA/B,EACApB,EACAqB,S,GAnEMG,aAyEjBC,EAAO,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KAEJlB,EAAyDkB,EAAzDlB,KAAMH,EAAmDqB,EAAnDrB,YAAaI,EAAsCiB,EAAtCjB,UAAWG,EAA2Bc,EAA3Bd,SAAUE,EAAiBY,EAAjBZ,KAAMC,EAAWW,EAAXX,OAItD,OACI,qCACI,sBAAKnC,UAAU,eAAf,UACI,qBAAKwC,IAAKX,EAAWa,IAAKd,EAC1BuC,MAAqB,wEAAdtC,EAAsF,CAAEuC,UAAW,WAAc,OACxH,gCACI,qBAAKpE,UAAU,kBAAf,SAAkC4B,IAClC,sBAAK5B,UAAU,aAAf,UACI,mBAAGC,KAAM+B,EAAUhC,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMiC,EAAMlC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACqB,KAAhByB,EAAqB,4CAA8CA,IAExE,qBAAKzB,UAAU,eAAf,qBACA,oBAAIA,UAAU,oBAAd,SACwB,IAAlBmC,EAAOT,OAAe,sBAEpBS,EAAOhB,KAAI,SAACkB,EAAMC,GACd,OACI,oBAAYtC,UAAU,oBAAtB,SACKqC,GADIC,YAiBtB8C,IC/GAS,E,4MAjBXhD,MAAQ,CACJG,OAAO,G,uDAEX,SAAkBwC,EAAKC,GACnBC,QAAQC,IAAIH,EAAKC,GACjB7B,KAAKT,SAAS,CACVH,OAAO,M,oBAGf,WACI,OAAIY,KAAKf,MAAMG,MACJ,cAAC,EAAD,IAEJY,KAAKmB,MAAMe,a,GAdE7B,aCHb,MAA0B,mCCgD1B8B,E,kDAnCX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAMVC,SAAW,SAAC1D,GACR,EAAK6B,SAAS,CAAE7B,QANhB,EAAKuB,MAAQ,CACTvB,GAAI,MAHO,E,0CAWnB,WAEI,OACI,sBAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,iCACI,cAAC,EAAD,UACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUgF,SAAUpB,KAAKoB,aAE7B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUM,OAAQ1B,KAAKf,MAAMvB,UAGrC,qBAAKtB,UAAU,gBAAgBwC,IAAKwD,EAAYtD,IAAI,qB,GA9BtDuB,a,MCFlBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f3837bf.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    _apiKey = 'apikey=bbdd95157486e54b3b7994bb52bb4218'\r\n    _baseOffset = 210\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = (character) => {\r\n        \r\n        let des = ''\r\n        \r\n        if (character.description.length > 150) {\r\n            des = character.description.slice(0, 150) + '...'\r\n        }\r\n        \r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: des,\r\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\r\n            homepage: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            comics: character.comics.items.map((item, i) => i < 9 ? item.name : null)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","export default __webpack_public_path__ + \"static/media/spinner.9962a936.gif\";","import spinner from './spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <img src={spinner} alt=\"Loading...\" className='loading-spinner' />\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n\r\n","const ErrorMessage = () => {\r\n    return(\r\n        <img className='error-message' src={process.env.PUBLIC_URL + '/error.svg'} alt='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { Component } from 'react';\r\nimport './randomChar.scss';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nclass RandomChar extends Component {\r\n\r\n    \r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        // console.log('mount RandomChar');\r\n        // this.onRandomChar();\r\n        // this.timerId = setInterval(this.updateChar, 33000)\r\n    }\r\n    componentDidUpdate() {\r\n        // console.log('update RandomChar');\r\n    }\r\n    onRandomChar = () => {\r\n        this.setState({loading: true})\r\n        this.updateChar()   \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // clearInterval(this.timerId)\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({ char, loading: false }) // this.setState({char: char}) то же самое \r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({ loading: false, error: true })\r\n    }\r\n\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        const { char, loading, error } = this.state\r\n        const errorMessage = error ? <ErrorMessage /> : null\r\n        const spinner = loading ? <Spinner /> : null\r\n        const content = !(loading || error) ? <View char={char} /> : null\r\n\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br />\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button onClick={() => this.onRandomChar()} className=\"button button__main\">\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char\r\n    \r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img \r\n                src={thumbnail} \r\n                alt=\"Random character\" \r\n                className=\"randomchar__img\" \r\n                style={thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {objectFit: 'contain'} : null} />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description === '' ? 'Sorry, no information about the character' : description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { Component } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 240,\r\n        charEnded: false\r\n    }\r\n\r\n\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest()\r\n    }\r\n\r\n\r\n\r\n    onError = () => {\r\n        this.setState({ loading: false, error: true })\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading()\r\n        this.marvelService\r\n            .getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false\r\n\r\n        if (newCharList.length < 9) {\r\n            ended = true\r\n        }\r\n\r\n\r\n        this.setState(({ charList, offset }) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newItemLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n\r\n    renderItems(arr) {\r\n        const items = arr.map((item) => {\r\n\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    key={item.id}\r\n                    onClick={() => this.props.updateId(item.id)}>\r\n                    <img src={item.thumbnail} alt={item.name} style={item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? { objectFit: 'contain' } : null} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n\r\n        });\r\n        // А эта конструкция вынесена для центровки спиннера/ошибки\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { charList, loading, error, newItemLoading, offset, charEnded } = this.state\r\n        // console.log(this.props);\r\n        const items = this.renderItems(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage /> : null\r\n        const spinner = loading ? <Spinner /> : null\r\n        const content = !(loading || error) ? items : null\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                <ul className=\"char__grid\">\r\n                    {errorMessage}\r\n                    {spinner}\r\n                    {content}\r\n                </ul>\r\n                <button\r\n                    disabled={newItemLoading}\r\n                    onClick={() => this.onRequest(offset)}\r\n                    style={{'display': charEnded ? 'none' : 'block'}}\r\n                    className=\"button button__main button__long\">\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nCharList.propTypes = {\r\n    updateId: PropTypes.number\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport PropTypes from 'prop-types';\n\nimport './charInfo.scss';\nimport Skeleton from '../skeleton/Skeleton';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n        // this.updateChar()\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false }) // this.setState({char: char}) то же самое \n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true })\n    }\n\n    onCharLoading = () => {\n        this.setState({ loading: true })\n    }\n\n    updateChar = () => {\n        const { charId } = this.props\n        if (!charId) {\n            return\n        }\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    componentDidCatch(err, info) {\n        console.log(err, info);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n\n        const { char, loading, error } = this.state\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error || !char) ? <View char={char} /> : null\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    // console.log(comics);\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} \n                style={thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? { objectFit: 'contain' } : null} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description === '' ? 'Sorry, no information about the character' : description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                { comics.length === 0 ? 'There are no comics' :\n                       \n                    comics.map((item, i) => {\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item}\n                            </li>\n                        )\n                    })\n                }\n\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n    componentDidCatch(err, info) {\r\n        console.log(err, info);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage></ErrorMessage>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from 'react';\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from '../errorBoundary/errorBoundary';\r\n\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: null\r\n        }\r\n    }\r\n\r\n    updateId = (id) => {\r\n        this.setState({ id })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar />\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList updateId={this.updateId} />\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.id} />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}