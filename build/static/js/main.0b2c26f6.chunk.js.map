{"version":3,"sources":["components/spinner/spinner.gif","components/spinner/spinner.js","components/appHeader/AppHeader.js","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/avangers.png","resources/img/UW.png","resources/img/x-men.png","components/comicsList/Avengers logo.png","components/comicsList/CommicsBanner.js","components/comicsList/ComicsList.js","components/app/App.js","index.js"],"names":["Spinner","src","spinner","alt","className","AppHeader","to","end","style","color","isActive","ErrorMessage","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","character","des","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","item","i","getComics","getComic","comic","CommicsBanner","avengers","avengersLogo","ComicsList","setComics","setOffset","newItems","setNewItems","useEffect","onRequest","initial","then","onComicsLoaded","newComics","arr","title","prices","price","renderItems","errorMessage","onClick","Page404","lazy","MainPage","ComicsPage","SingleComicPage","App","fallback","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2c26f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.9962a936.gif\";","import spinner from './spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <img src={spinner} alt=\"Loading...\" className='loading-spinner' />\n    )\n}\n\nexport default Spinner\n\n","import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink end\n                        style={({isActive }) => ({color: isActive ? '#9f0012' : 'inherit'})}\n                        to='/'>Characters</NavLink>\n                    </li>\n                    /\n                    <li><NavLink\n                    style={({isActive }) => ({color: isActive ? '#9f0012' : 'inherit'})}\n                    to='/comics'>Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const ErrorMessage = () => {\n    return(\n        <img className='error-message' src={process.env.PUBLIC_URL + '/error.svg'} alt='error' />\n    )\n}\n\nexport default ErrorMessage","import { useHttp } from \"../hooks/http.hook\"\n\nconst useMarvelService = () => {\n\n    const {loading, request, error, clearError} = useHttp()\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\n    const _apiKey = 'apikey=bbdd95157486e54b3b7994bb52bb4218'\n    const _baseOffset = 210\n    \n\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0])\n    }\n\n    const _transformCharacter = (character) => {\n        \n        let des = ''\n        \n        if (character.description.length > 150) {\n            des = character.description.slice(0, 150) + '...'\n        }\n        \n        return {\n            id: character.id,\n            name: character.name,\n            description: des,\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n            homepage: character.urls[0].url,\n            wiki: character.urls[1].url,\n            comics: character.comics.items.map((item, i) => i < 9 ? item.name : null)\n        }\n    }\n\n    const getComics = async (offset = 300) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\n        const comics = res.data.results\n        \n        return comics\n    }\n    \n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\n        const comic = res.data.results[0]        \n        return comic\n    }\n\n    \n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\"\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        setLoading(true)\n\n        try {\n            const response = await fetch(url, {method, body, headers})\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json()\n\n            setLoading(false)\n\n            return data\n        } catch(e) {\n            setLoading(false)\n            setError(e.message)\n\n            throw e\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return {loading, request, error, clearError}\n}","export default __webpack_public_path__ + \"static/media/avangers.c29e0ef0.png\";","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","export default __webpack_public_path__ + \"static/media/Avengers logo.9b944f71.png\";","import avengers from './avangers.png'\nimport avengersLogo from './Avengers logo.png'\n\nconst CommicsBanner = () => {\n    return(\n        <div className=\"comics__banner\">\n            <div className=\"banner__avengers\">\n                <img src={avengers} alt=\"avengers\" />\n            </div>\n            <div className=\"banner__newcomics\">\n                <h2>New comics every week! Stay tuned!</h2>\n            </div>\n            <div className=\"banner__logo\">\n                <img src={avengersLogo} alt=\"avengers logo\" />\n            </div>\n        </div>\n    )\n}\n\nexport default CommicsBanner","import './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport AppHeader from '../appHeader/AppHeader';\nimport CommicsBanner from './CommicsBanner';\nimport useMarvelService from '../../services/MarvelService';\nimport { useEffect, useState } from 'react';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = () => {\n\n    const [comics, setComics] = useState([])\n    const [offset, setOffset] = useState(300)\n    const [newItems, setNewItems] = useState(false)\n\n\n    const { loading, error, getComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItems(false) : setNewItems(true)\n        getComics(offset).then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComics) => {\n        setComics(comics => [...comics, ...newComics])\n        setNewItems(false)\n        setOffset(offset + 8)\n    }\n\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li key={item.title + '_' + i} className=\"comics__item\">\n                    {/* href={item.urls[0].url} */}\n                    <Link to={`/comics/${item.id}`} >\n                        <img src={item.thumbnail.path + '.jpg'} alt=\"ultimate war\" className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.prices[0].price}$</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comics)\n    const errorMessage = error ? <ErrorMessage /> : null\n    const spinner = loading && !newItems ? <Spinner /> : null\n    \n    return (\n\n        <div className=\"comics__list app\">\n            <CommicsBanner />\n            {errorMessage}\n            {spinner}\n            {items}\n            <button onClick={() => onRequest(offset)} className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Switch } from 'react-router-dom';\nimport AppHeader from \"../appHeader/AppHeader\";\n\n// import { MainPage, ComicsPage, SingleComicPage } from '../pages';\nimport Spinner from '../spinner/spinner';\n\n\nconst Page404 = lazy(() => import('../pages/404'))\nconst MainPage = lazy(() => import('../pages/MainPage'))\nconst ComicsPage = lazy(() => import('../pages/ComicsPage'))\nconst SingleComicPage = lazy(() => import('../pages/SingleComicPage'))\n\n// before lazy 667 KB\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <Suspense fallback={<Spinner />}>\n                        <Routes>\n                            <Route path='/' element={<MainPage />} />\n\n                            <Route path='/comics' element={<ComicsPage />} />\n                            <Route path='/comics/:comicID' element={<SingleComicPage />} />\n                            <Route path='*' element={<Page404 />} />\n                        </Routes>\n                    </Suspense>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport ComicsList from './components/comicsList/ComicsList';\nimport './style/style.scss';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}